# -*- coding: utf-8 -*-
"""Energy Cost p2

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-1BGnnuqc-1f0ZDyERhxIrFx_Z36VJ1X
"""

# Import necessary libraries
import streamlit as st
import numpy as np
import random
import pandas as pd

# Function to generate random coefficients
def generate_random_function():
    # Randomly generate coefficients for a sine and cosine combination
    a = random.uniform(-10, 10)
    b = random.uniform(-10, 10)
    c = random.uniform(-10, 10)
    return lambda x: a * np.sin(b * x) + c * np.cos(a * x)

# Streamlit app
st.title('Random Mathematical Functions Plot')

# Generate year range from 2000 to 2024
years = np.linspace(2000, 2024, 25)  # From year 2000 to 2024

# Manually define the points for Function 1 (f1)
f1_years = np.array([2017, 2018, 2019, 2020, 2021, 2022])
f1_values = np.array([24.13, 27.04, 25.57, 22.34, 28.86, 36.02])

# Generate 4 random functions (for f2, f3, f4, f5)
functions = [generate_random_function() for _ in range(4)]

# Create a dictionary to hold function data
function_data = {}

# Add Function 1 data (f1) manually to the dictionary
function_data['ARICD'] = f1_values

# Calculate and store values for each of the random functions (f2 to f5)
for i, func in enumerate(functions, start=1):
    function_data[f'Function {i+1}'] = func(years)

# Convert the dictionary to a DataFrame for better plotting
df = pd.DataFrame(function_data, index=f1_years)

# Rename the columns to your specific function names
df.columns = ['ARICD', 'ARTCD', 'ARTXD', 'AVACD', 'AVTCD']

# Display the line chart with customized axes and labels
st.line_chart(df)

# Manually set axis labels (Streamlit automatically handles axis labels, but we can add some customizations)
st.markdown("""
    <style>
        .stChart .e1yqg6dd0 { font-size: 16px; }
    </style>
""", unsafe_allow_html=True)