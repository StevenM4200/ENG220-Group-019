# -*- coding: utf-8 -*-
"""Energy Cost p2

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-1BGnnuqc-1f0ZDyERhxIrFx_Z36VJ1X
"""

# Import necessary libraries
import streamlit as st
import numpy as np
import random
import pandas as pd

# Function to generate random coefficients
def generate_random_function():
    # Randomly generate coefficients for a sine and cosine combination
    a = random.uniform(-10, 10)
    b = random.uniform(-10, 10)
    c = random.uniform(-10, 10)
    return lambda x: a * np.sin(b * x) + c * np.cos(a * x)

# Streamlit app
st.title('Random Mathematical Functions Plot')

# Generate year range from 2017 to 2022
years = np.array([2017, 2018, 2019, 2020, 2021, 2022])

# Generate 5 random functions
functions = [generate_random_function() for _ in range(5)]

# Create a dictionary to hold function data
function_data = {}

# Calculate and store values for each function
for i, func in enumerate(functions, start=1):
    function_data[f'Function {i}'] = func(years)

# Convert the dictionary to a DataFrame for better plotting
df = pd.DataFrame(function_data, index=years)

# Rename the columns to your specific function names
df.columns = ['ARICD', 'ARTCD', 'ARTXD', 'AVACD', 'AVTCD']

# Display the line chart with customized axes and labels
st.line_chart(df)

# Update the x and y axis labels manually using Streamlit's capabilities
st.markdown("""
    <style>
        .stChart .e1yqg6dd0 { font-size: 16px; }
    </style>
""", unsafe_allow_html=True)

# The axis labels themselves are automatically handled by Streamlit's line chart,
# but for custom charting (if necessary) we can modify it using other libraries like Altair.